;;; How to plot using nlisp now the image function is fixed.
(defmethod plot-cwt-labelled ((scaleogram-to-plot scaleogram) &key 
			      (title "unnamed")
			      (time-axis-decimation 4)
			      (colorbox-divisions 4.0)
			      (maximum-colour-value 255))
  "Method to plot the magnitude and phase components of the result of
   a continuous wavelet transform on a signal."
  (let* ((downsampled-magnitude (.decimate (scaleogram-magnitude scaleogram-to-plot) (list 1 time-axis-decimation)))
	 (downsampled-phase (.decimate (scaleogram-phase scaleogram-to-plot) (list 1 time-axis-decimation)))
	 (rescaled-phase (.* (plotable-phase downsampled-phase downsampled-magnitude maximum-colour-value) 1d0)))
    (window)				; put this on a separate window.
    (reset-plot)			; Since we don't reset with image.
    ;; "set size 0.7,0.7"
    ;; "set origin 0.1,0.1"
    (plot-command "set multiplot")	; Put the magnitude plot above the phase on the same window.
    (plot-command "set size 1.0,0.5")
    (plot-command "set origin 0.0,0.5")
    ;; Label both magnitude & phase plots in seconds.
    (plot-command "set xtics font \"Times,10\"")
    (plot-command "set ytics font \"Times,10\"")
    ;; Expand the colorbox and only display the given number of tics.
    (plot-command "set colorbox user origin 0.88,0.65 size 0.03,0.2")
    (plot-command (format nil "set cbtics ~f" (/ (range downsampled-magnitude) colorbox-divisions)))
    ;; White thru grey to black for magnitude plots
    (nlisp:palette-defined '((0 "#FFFFFF") (1 "#000000")))
    (image (.flip downsampled-magnitude) nil nil
	   :title (format nil "Magnitude of ~a" title)
	   :xlabel "Time in Seconds" 
	   :ylabel "Scale as IOI Range in Seconds"
	   :reset nil
	   :aspect-ratio aspect-ratio)
    ;; Phase plot
    (plot-command "set size 1.0,0.6")
    (plot-command "set origin 0.0,0.05")
    ;; (nlisp::palette "model HSV maxcolors 256")
    ;;(nlisp::palette (format nil "defined ( 0 0 0 1, 1 0 1 1, ~d 1 1 1, ~d 0 0 1)"
    ;;			    (1- maximum-colour-value) maximum-colour-value))
    ;; (nlisp::palette (format nil "defined ( 0 0 0 1, 1 0 0 1, 1 0 1 1, ~d 1 1 1 )" maximum-colour-value))
    ;; (nlisp::palette (format nil "defined ( 0 0 0 1, 0 0 1 1, 1 0 1 1, ~d 1 1 1 )" 255))
    ;; -1 0 1 0
    ;; (nlisp:palette-defined '((0 "#FFFFFF") (0.5 "#000000") (1 "#FFFFFF")))
    (nlisp:palette-defined '((0 "#FFFFFF") (1 "#000000")))
    ;; (nlisp:palette-defined '((0 "#FFFFFF") (0.25 "#000000") (0.5 "#FFFFFF") (0.75 "#000000") (1.0 "#FFFFFF")))
    (plot-command (format nil "set cbtics (~{~{\"~a\" ~d~}~^, ~})~%" 
			  (label-phase-in-radians (range rescaled-phase) colorbox-divisions)))
    (plot-command "set colorbox user origin 0.88,0.20 size 0.03,0.2")
    ;;(format t "maximum of rescaled-phase ~f minimum ~f range ~f~%" 
	;;    (.max rescaled-phase) (.min rescaled-phase) (range rescaled-phase))
    (image (.flip rescaled-phase) nil nil
	   :title (format nil "Phase of ~a" title)
	   :xlabel "Time in Seconds" 
	   :ylabel "Scale as IOI Range in Seconds"
	   :reset nil
	   :aspect-ratio aspect-ratio)
    (plot-command "unset multiplot")
    (reset-plot)))

