;;;; -*- Lisp -*-
;;;;
;;;; $Id$
;;;;
;;;; Routines to read and write score files for various synthesis systems.
;;;;

(in-package :multires-rhythm)

;;; (concatenate string filename ".handclap.score")

;;; normally we handclap using a sample
(defun save-scorefile (filename intervals &key (duration 0.075) (description "") (instrument "Sampler"))
  "Save the vectors as times and amplitudes of a MusicKit scorefile."
  (with-open-file (f filename :direction :output :if-exists :new-version)
    (format f "// MusicKit scorefile ~a~%" filename)
    (format f "// Generated by save-score~%")
    (format f "info tempo: 60, title: \"Handclapping to ~a\";~%" description)
    (format f "part handclap;~%")
    (format f "handclap synthPatchCount:1, synthPatch:\"~a\";~%~%" instrument)
    (format f "BEGIN;~%")

  ;;rhythms(length(times)) = 1.0;

  (loop
     ;; final rhythm is immaterial, so long as it's long enough for the sample
     for time = 0.0 then (+ time interval)
     for interval in (append intervals (list 1.0))
     for note-tag = 0 then (1+ note-tag)
     do
       (format f "// IOI = ~,3f~%" interval)
       (format f "t ~,3f;~%" time)
       (format f "handclap (~f ~d) " duration note-tag)
     ;;if(strcmp(instrument, "Sampler"))
     ;;  (format f "filename: \"~a\" ", "~/Library/Sounds/hihat_closed.aiff")
     ;;elseif(strcmp(instrument, "Midi"))
       ;; (format f "note: g3k, ")
       (format f "keyNum: 64, ")

     ;;(format f "amplitude: ~f;~%" velocities(timeIndex))
       (format f "amplitude: ~f;~%" 1.0)
     finally (format f "t ~,3f;~%END;~%" time))))



